@inject Microsoft.AspNetCore.Identity.UserManager<ExamStation.Areas.Identity.Data.ExamStationUser> UserManager
@{
    string userEmail = @ViewBag.UserEmail;
    ExamStation.Data.ExamStationDbContext _context = new ExamStation.Data.ExamStationDbContext();
    int ExamId = @ViewBag.ExamId;

    int durationInMin = 0;
    string examTitle = "";
    if (!ExamId.Equals(0))
    {
        durationInMin = _context.OnlineExam.Where(w => w.Id == ExamId).FirstOrDefault().Duration;
    }

    int durationInHour = durationInMin / 60;
    if (!durationInHour.Equals(0))
    {
        durationInMin = durationInHour * 60 - durationInMin;
    }

    DateTime ExamStartTime = DateTime.Now;
    DateTime ExamEndTime = ExamStartTime.AddHours(durationInHour).AddMinutes(durationInMin);

    double mark = 0;
    int questionBankId = 0;
    string firstQuestion = string.Empty;
    int totalQuestion = 0;
    int lastQuestionBankId = 0;
    int firstQuestionBankId = 0;
    if (!ExamId.Equals(0))
    {
        examTitle = _context.OnlineExam.Where(e => e.Id == ExamId).FirstOrDefault().ExamTitle;
        mark = _context.QuestionBank.Where(m => m.Id == ExamId).FirstOrDefault().Mark;
        questionBankId = _context.TakeExamMapper.Where(qb => qb.ExamId == ExamId).FirstOrDefault().QuestionBankId;
        lastQuestionBankId = _context.TakeExamMapper.Where(w => w.ExamId == ExamId).Max(m => m.QuestionBankId);
        firstQuestionBankId = _context.TakeExamMapper.Where(w => w.ExamId == ExamId).Min(m => m.QuestionBankId);
        firstQuestion = _context.QuestionBank.Where(q => q.Id == questionBankId).FirstOrDefault().Question;
        totalQuestion = _context.TakeExamMapper.Count(tq => tq.ExamId == ExamId);
    }

}
<!DOCTYPE html>
<html lang="en">
<!-- BEGIN HEAD -->
<head>
    <meta charset="utf-8" />
    <title>ExamStation | Admin Dashboard Template</title>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta content="width=device-width, initial-scale=1" name="viewport" />
    <meta content="" name="description" />
    <meta content="" name="author" />
    <!-- BEGIN GLOBAL MANDATORY STYLES -->
    <link href="~/ExamStation/assets/global/plugins/bootstrap/css/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <!-- BEGIN THEME STYLES -->
    <!-- DOC: To use 'rounded corners' style just load 'components-rounded.css' stylesheet instead of 'components.css' in the below style tag -->
    <link href="~/ExamStation/assets/global/css/components.css" id="style_components" rel="stylesheet" type="text/css" />
    <link href="~/ExamStation/assets/admin/layout/css/custom.css" rel="stylesheet" type="text/css" />
    <link href="~/ExamStation/assets/JSCountdown/jquery.countdown.css" rel="stylesheet" />
    <link href="~/CountdownClock/jquerysctipttop.css" rel="stylesheet" />
    <link href="~/CountdownClock/style.css" rel="stylesheet" />
    <!-- END THEME STYLES -->
    <link rel="shortcut icon" href="favicon.ico" />
</head>
<!-- END HEAD -->
<body>
    <div id="page-content">
        <div class="container">
            <div class="row">
                @*<form action="#" controller="Exams" name="post_req" id="post_req" method="post" accept-charset="utf-8">*@
                <div style="display:none;"><input type="hidden" name="_method" value="POST"></div>
                <div class="col-md-9" id="myForm">
                    <div class="panel panel-default">
                        <div class="panel-heading"><strong>[ Exam Title: @examTitle ]</strong></div>
                        <div class="panel-body">
                            <p>
                                <small>
                                    You have started the exam on @ExamStartTime.
                                    Time duration for this exam is @durationInHour Hours @durationInMin MIns.
                                    Your exam will be submitted automatically @ExamEndTime.
                                </small>
                            </p>
                            <div class="panel panel-default">
                            <div class="panel-heading"><strong>Question No. @ExamId of @totalQuestion [ Mark: @mark ]</strong></div>
                                <div class="table-responsive">
                                    <table class="table table-striped table">
                                        <thead>
                                            <tr>
                                                <td>
                                                    <p id="question">@firstQuestion</p>
                                                    <input type="hidden" id="hdnQuestionBankId" value="@questionBankId" />
                                                    <input type="hidden" id="hdnUserEmail" value="@userEmail" />
                                                </td>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr>
                                                <td>&nbsp;</td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    <div class="input textarea">
                                                        <textarea name="data[Exam][answer]" class="form-control" rows="7" cols="30" id="ExamAnswer"></textarea>
                                                    </div>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                                <div class="panel-body">
                                    <div class="row">
                                        <div class="col-md-2">
                                            <a href="#" id="btnPrev" class="btn btn-default btn-sm btn-block">← Prev</a>
                                        </div>
                                        <div class="col-md-2">
                                            <a href="#" onclick="" id="btnSave" class="btn btn-success btn-sm btn-block">
                                                <span class="glyphicon glyphicon-check"></span>&nbsp;Save
                                            </a>
                                        </div>
                                        <div class="col-md-3">
                                            <a href="#" onclick="" id="btnSaveNext" class="btn btn-default btn-sm btn-block">
                                                <span class="glyphicon glyphicon-log-out"></span>&nbsp;Save &amp; Next
                                            </a>
                                        </div>
                                        <div class="col-md-3">
                                            <a href="#" id=”Reset” onclick="reset()" type=”reset” value=”Reset” class="btn btn-danger btn-sm btn-block">
                                                <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;Reset Answer
                                            </a>
                                        </div>
                                        <div class="col-md-2">
                                            <button id="btnNext" class="btn btn-default btn-sm btn-block">Next →</button>
                                        </div>
                                    </div>
                                </div>
                                <p>&nbsp;</p>
                            </div>
                        </div>
                    </div>
                </div>
                <input type="hidden" name="saveNext" value="" id="ExamSave">
                @*</form>*@
                <div class="col-md-3">
                    <div class="jumbotron countdown show" data-Date='@ExamEndTime.ToString("yyyy/MM/dd HH:mm:ss")'>
                        <div class="running">
                            <timer>
                                <span class="hours"></span>:<span class="minutes"></span>:<span class="seconds"></span>
                            </timer>
                            <div class="break"></div>
                            <div class="labels">
                                <span>Hours</span><span>Minutes</span><span>Seconds</span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="panel-group" id="accordion">
                        <div class="panel panel-primary ">
                            <div class="panel-heading">
                                <h4 class="panel-title">Class Test</h4>
                            </div>
                            <div id="ClassTest" class="panel-collapse collapse in fixed-content">
                                <div class="panel-body ">
                                    <div class="row">
                                        @{
                                            var QuestionButtonList = _context.TakeExamMapper.Where(q => q.ExamId == ExamId ).ToList();

                                            for (int i = 1; i <= QuestionButtonList.Count; i++)
                                            {
                                                <div class="col-md-3 mrg-1">
                                                    <a href="#" class="btn btn-info btn-block qb">@i</a>
                                                </div>
                                            }
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <form action="#" name="post_5f87d3ce5481d342512953" id="post_5f87d3ce5481d342512953" style="display:none;" method="post">
                        <input type="hidden" name="_method" value="POST">
                    </form>
                    <a href="#" class="btn btn-danger btn-sm btn-block" onclick="window.open('@Url.Action("_FinishExam", "OnlineExams")','name','width=1200,height=700,')"><span class="glyphicon glyphicon-lock"></span>&nbsp;Finish Exam </a>
                </div>                
            </div>
        </div>
    </div>
    <script src="~/ExamStation/assets/global/plugins/jquery.min.js"></script>
    <script src="~/CountdownClock/multi-countdown.js"></script>

    <script type="text/javascript">

        $(document).ready(function () {
            $("#Reset").click(function () {
                $("#ExamAnswer").trigger("reset");
            });
        });

        $("#btnNext").click(function () {
            var questionBankId = $("#hdnQuestionBankId").val();

            if (@lastQuestionBankId==questionBankId) {
                alert("This is last question");
                return false;
            }
         $.ajax({
             url: "@Url.Action("GetNextQuestion", "OnlineExams")",
             data: { 'questionBankId': questionBankId },
             type: 'GET',
             dataType: 'json',
             success: function (questionBank) {
                 console.log(questionBank);
                //alert(questoinResult);
               //  now ata object hoyese array na
                $("#question").html(questionBank.question);
                $("#hdnQuestionBankId").val(questionBank.id);
             }
         });
        });

        $("#btnPrev").click(function () {

            var questionBankId = $("#hdnQuestionBankId").val();

            if (@firstQuestionBankId==questionBankId) {
                alert("This is first last question");
                return false;
            }
         $.ajax({
             url: "@Url.Action("GetPrevQuestion", "OnlineExams")",
             data: { 'questionBankId': questionBankId },
             type: 'GET',
             dataType: 'json',
             success: function (questionBank) {
                 console.log(questionBank);
                //alert(questoinResult);

                $("#question").html(questionBank[0].question);
                $("#hdnQuestionBankId").val(questionBank[0].id);
             }
         });
        });


        $("#btnSave").click(function () {
            //alert("#btnSave");
            var questionBankId = $("#hdnQuestionBankId").val();
            var userEmail = $("#hdnUserEmail").val();
            var examAnswer = $("#ExamAnswer").val();
         $.ajax({
             url: "@Url.Action("SaveAnswers", "OnlineExams")",
             data: { 'StudentEmail': userEmail, 'ExamId':@ExamId, 'QuestionBankId': questionBankId, 'StudentAnswer': examAnswer },
            //traditional: true,
             type: 'POST',
             dataType: 'json',
             success: function (result) {
                 console.log(result);
                //alert(questoinResult);
             }
         });
        });


        $("#btnSaveNext").click(function () {
            //alert("#btnSave");
            var questionBankId = $("#hdnQuestionBankId").val();
            var userEmail = $("#hdnUserEmail").val();
            var examAnswer = $("#ExamAnswer").val();
         $.ajax({
             url: "@Url.Action("SaveAnswersAndGetNextQuestion", "OnlineExams")",
             data: { 'StudentEmail': userEmail, 'ExamId':@ExamId, 'QuestionBankId': questionBankId, 'StudentAnswer': examAnswer },
            //traditional: true,
             type: 'POST',
             dataType: 'json',
             success: function (questionBank) {
                 console.log(questionBank);
                 //alert(questoinResult);
                 //  now ata object hoyese array na
                 $("#question").html(questionBank.question);
                 $("#hdnQuestionBankId").val(questionBank.id);
             }
         });
        });

        function reset() {
            var ExamAnswer = document.getElementById('ExamAnswer');
            if (!ExamAnswer.value || ExamAnswer.value != ExamAnswer.defaultValue && confirm('Are you sure?')) {
                ExamAnswer.value = ExamAnswer.defaultValue;
            }
        }

    </script>
</body>
</html>
