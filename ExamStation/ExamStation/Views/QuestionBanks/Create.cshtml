@model ExamStation.Models.QuestionBank

@{
    ViewData["Title"] = "Create";

    ExamStation.Data.ExamStationDbContext _context = new ExamStation.Data.ExamStationDbContext();

    ViewBag.QuestionTypeList = _context.QuestionType.ToList();
}

<h2>Add Question Bank</h2>
<hr />
<div asp-validation-summary="ModelOnly" class="text-danger"></div>
<div class="form-group row">
    <label asp-for="QuestionGroup" class="control-label col-sm-2"></label>
    <div class="col-sm-6">
        @*<input asp-for="QuestionGroup" class="form-control" />*@
        @Html.DropDownListFor(model => model.QuestionGroup, new SelectList(ViewBag.QuestionGroupList, "Id", "Title"), "Select Question Group", new { @class = "form-control" })
        <span asp-validation-for="QuestionGroup" class="text-danger"></span>
    </div>
</div>
<div class="form-group row">
    <label asp-for="DifficultyLevel" class="control-label col-sm-2"></label>
    <div class="col-sm-6">
        @*<input asp-for="DifficultyLevel" class="form-control" />*@
        @Html.DropDownListFor(model => model.DifficultyLevel, new SelectList(ViewBag.QuestionLevelList, "Id", "Title"), "Select Question Level", new { @class = "form-control" })
        <span asp-validation-for="DifficultyLevel" class="text-danger"></span>
    </div>
</div>
<div class="form-group row">
    <label asp-for="Question" class="control-label col-sm-2"></label>
    <div class="col-sm-6">
        <textarea id="Question" asp-for="Question" rows="8" cols="84"></textarea>
        <span asp-validation-for="Question" class="text-danger"></span>
    </div>
</div>
<div class="form-group row">
    <label asp-for="Explanation" class="control-label col-sm-2"></label>
    <div class="col-sm-6">
        <textarea id="Explanation" asp-for="Explanation" rows="8" cols="84"></textarea>
        <span asp-validation-for="Explanation" class="text-danger"></span>
    </div>
</div>
<div class="form-group row">
    <label asp-for="Hints" class="control-label col-sm-2"></label>
    <div class="col-sm-6">
        <input asp-for="Hints" class="form-control" />
        <span asp-validation-for="Hints" class="text-danger"></span>
    </div>
</div>
<div class="form-group row">
    <label asp-for="Mark" class="control-label col-sm-2"></label>
    <div class="col-sm-6">
        <input asp-for="Mark" class="form-control" />
        <span asp-validation-for="Mark" class="text-danger"></span>
    </div>
</div>
<div class="form-group row">
    <label for="type" asp-for="QuestionType" class="col-sm-2 control-label">
        Question Type <span class='text-red'>*</span>
    </label>
    <div class="col-sm-6">
        <select name="type" id='type' class='form-control'>
            <option value="0">Please Select</option>
            <option value="1">Single Answer</option>
            <option value="2">Multi Answer</option>
            <option value="3">Fill in the Blanks</option>
        </select>
    </div>
    <span class="col-sm-4 control-label"></span>
</div>
<div class='form-group row' id='totalOptionDiv'>
    <label for="totalOption" class="col-sm-2 control-label">
        Total Option
    </label>
    <div class="col-sm-6">
        <select name="totalOption" id='totalOption' class='form-control'>
            <option value="0">0</option>
            <option value="1">1</option>
            <option value="2">2</option>
            <option value="3">3</option>
            <option value="4">4</option>
            <option value="5">5</option>
            <option value="6">6</option>
            <option value="7">7</option>
            <option value="8">8</option>
            <option value="9">9</option>
            <option value="10">10</option>
        </select>
    </div>
    <span class="col-sm-4 control-label">
    </span>
</div>
<div id="in" class='form-group'></div>

<div class="form-group row">
    <div class="col-sm-offset-2 col-sm-8">
        <input id="btnSubmit" type="submit" class="btn btn-default" value="Add Question bank reset">
    </div>
</div>



@section scripts{
    @*<script src="~/js/ckeditor/ckeditor.js"></script>*@
    <script type="text/javascript">
        $('.select2').select2();
        $(document).on('click', '#close-preview', function () {
            $('.image-preview').popover('hide');
            // Hover befor close the preview
            $('.image-preview').hover(
                function () {
                    $('.image-preview').popover('show');
                    $('.content').css('padding-bottom', '100px');
                },
                function () {
                    $('.image-preview').popover('hide');
                    $('.content').css('padding-bottom', '20px');
                }
            );
        });


        $('#question').jqte();
        $('#explanation').jqte();
        $(function () {
            $('#totalOptionDiv').hide();
        });


        $(document).ready(function () {
            var totalOptionID = '0';
            if (totalOptionID > 0) {
                $('#totalOptionDiv').show();
            }

            $("#btnSubmit").click(function () {
                var questionGroup = $("#QuestionGroup").val();
                var difficultyLevel = $("#DifficultyLevel").val();
                var question = $("#Question").text();
                var explanation = $("#Explanation").text();
                var hints = $("#Hints").val();
                var mark = $("#Mark").val();
                var questionTypeId = $("#type").val();

                var optionArray = new Array();
                $('.answerOption').each(function (index, item) {
                    optionArray.push($(item).val());
                });
              //  console.log(arrText);

                var answerArray = new Array();
                if (questionTypeId == 1) {
                $('input[type=radio]').each(function (index, item) {
                    if ($(this).prop("checked")) {
                        answerArray.push(1);
                    }
                    else {
                        answerArray.push(0);
                    }
                });
                }
                //console.log(arrRadio);


               // var arrCheckBox = new Array();
                if (questionTypeId == 2) {
                    $('input[type=checkbox]').each(function (index, item) {
                        if ($(this).prop("checked")) {
                            answerArray.push(1);
                        }
                        else {
                            answerArray.push(0);
                        }
                    });
                }
                //console.log(arrCheckBox);

                var questionGroup = $("#QuestionGroup").val();
                var difficultyLevel = $("#DifficultyLevel").val();
                var question = $('textarea[name="Question"]').val();// CKEDITOR.instances.Question.getData(); // $("#Question").text();
                var explanation = $('textarea[name="Explanation"]').val();// CKEDITOR.instances.Explanation.getData(); // $("#Explanation").text();
                var hints = $("#Hints").val();
                var mark = $("#Mark").val();
                var Options = $("#totalOption").val();

                 $.ajax({
                     url: "@Url.Action("SaveQuestions", "QuestionBanks")",
                     data: { 'questionGroupId': questionGroup, 'difficultyLevelId': difficultyLevel, 'question': question, 'explanation': explanation, 'hints': hints, 'mark': mark, 'answerArray': answerArray, 'questionTypeId': questionTypeId, 'optionArray': optionArray },
                     type: 'POST',
                     dataType: 'json',
                     success: function (result) {
                     //console.log(result);
                         alert(result);
                         $('textarea[name="Question"]').val("");
                     }
                 });
            });
        });

        $('#type').change(function () {
            $('#in').children().remove();
            var type = $(this).val();
            if (type == 0) {
                $('#totalOptionDiv').hide();
            } else {
                $('#totalOption').val(0);
                $('#totalOptionDiv').show();
            }

        });

        $('#totalOption').change(function () {
            var valTotalOption = $(this).val();
            var type = $('#type').val();

            if (parseInt(valTotalOption) != 0) {
                var opt = [];
                var ans = [];
                var count = $('.coption').size();

                for (j = 1; j <= count; j++) {
                    if (type == 3) {
                        opt[j] = $('#answer' + j).val();
                    } else {
                        opt[j] = $('#option' + j).val();
                        if ($('#ans' + j).prop('checked')) {
                            ans[j] = 'checked="checked"';
                        }
                    }
                }

                $('#in').children().remove();
                for (i = 1; i <= valTotalOption; i++) {
                    if ($('#in').size())
                        $('#in').append(formHtmlData(i, type, opt[i], ans[i]));
                    else
                        $('#in').append(formHtmlData(i, type));
                }
            } else {
                $('#in').children().remove();
            }

        });

        function formHtmlData(id, type, value = '', checked = '') {
            var required = 'required';
            if (type == 1) {
                type = 'radio';
            } else if (type == 2) {
                type = 'checkbox';
                required = '';
            } else if (type == 3) {
                var html = '<div class="form-group row coption"><label for="answer' + id + '" class="col-sm-2 control-label">Answer ' + id + '</label><div class="col-sm-4"><input type="text" class="form-control" id="answer' + id + '" name="answer[]" value="' + value + '" placeholder="Answer ' + id + '"></div><div class="col-sm-1"></div><span class="col-sm-4 control-label text-red" id="anserror' + id + '"></span></div>';
                return html;
            }
            var html = '<div class="form-group row coption"><label for="option' + id + '" class="col-sm-2 control-label">Option ' + id + '</label><div class="col-sm-4" style="display:inline-table"><input type="text" class="form-control answerOption"  id="option' + id + '" name="option[]" value="' + value + '" placeholder="Option ' + id + '"><span class="input-group-addon"><input class="answer" id="ans' + id + '" ' + checked + ' type="' + type + '" name="answer[]" value="' + id + '" data-toggle="tooltip" data-placement="top" title="Correct Answer" ' + required + ' /></span></div><div class="col-sm-3" style="display:inline-table"></div><span class="col-sm-3 control-label text-red" id="anserror' + id + '"></span></div>';
            return html;
        }

        

    </script>

}